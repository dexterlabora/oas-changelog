{
  "oldVersion": "0.6.0",
  "newVersion": "1.0.0-beta",
  "uniqueNames": [
    "Changes",
    "UnmatchDiffs",
    "Renamed"
  ],
  "uniqueGroups": [
    null,
    "SSIDs",
    "Networks",
    "Organizations"
  ],
  "uniqueMethods": [
    null,
    "put",
    "post",
    "get"
  ],
  "diff": [
    {
      "ruleId": "edit-base-path",
      "message": "Base path turned from  `/api/v0` to `/api/v1`",
      "messageHtml": "Base path turned from <code>/api/v0</code> to <code>/api/v1</code>",
      "previousBasePath": "/api/v0",
      "currentBasePath": "/api/v1",
      "type": "infos",
      "name": "Changes"
    },
    {
      "ruleId": "edit-object-property-type",
      "message": "`paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema` - Property `walledGardenRanges` type turn from `string` to `array`",
      "messageHtml": "Property <code>walledGardenRanges</code> type turn from <code>string</code> to <code>array</code>",
      "objectPath": "paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema",
      "path": "/networks/{networkId}/ssids/{number}",
      "method": "put",
      "Property": "walledGardenRanges",
      "previousType": "string",
      "currentType": "array",
      "type": "infos",
      "name": "Changes",
      "group": "SSIDs",
      "apiDetails": {
        "description": "Update the attributes of an SSID",
        "operationId": "updateNetworkSsid",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSsid",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the SSID"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether or not the SSID is enabled"
                },
                "authMode": {
                  "type": "string",
                  "enum": [
                    "open",
                    "psk",
                    "open-with-radius",
                    "8021x-meraki",
                    "8021x-radius"
                  ],
                  "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki' or '8021x-radius')"
                },
                "enterpriseAdminAccess": {
                  "type": "string",
                  "enum": [
                    "access disabled",
                    "access enabled"
                  ],
                  "description": "Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')"
                },
                "encryptionMode": {
                  "type": "string",
                  "enum": [
                    "wep",
                    "wpa"
                  ],
                  "description": "The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'"
                },
                "psk": {
                  "type": "string",
                  "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'"
                },
                "wpaEncryptionMode": {
                  "type": "string",
                  "enum": [
                    "WPA1 and WPA2",
                    "WPA2 only"
                  ],
                  "description": "The types of WPA encryption. ('WPA1 and WPA2' or 'WPA2 only')"
                },
                "splashPage": {
                  "type": "string",
                  "enum": [
                    "None",
                    "Click-through splash page",
                    "Billing",
                    "Password-protected with Meraki RADIUS",
                    "Password-protected with custom RADIUS",
                    "Password-protected with Active Directory",
                    "Password-protected with LDAP",
                    "SMS authentication",
                    "Systems Manager Sentry",
                    "Facebook Wi-Fi",
                    "Google OAuth",
                    "Sponsored guest"
                  ],
                  "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children."
                },
                "radiusServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address of your RADIUS server",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "UDP port the RADIUS server listens on for Access-requests"
                      },
                      "secret": {
                        "type": "string",
                        "description": "RADIUS client shared secret",
                        "required": true
                      }
                    }
                  },
                  "description": "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusCoaEnabled": {
                  "type": "boolean",
                  "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server."
                },
                "radiusFailoverPolicy": {
                  "type": "string",
                  "enum": [
                    "Deny access",
                    "Allow access"
                  ],
                  "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')"
                },
                "radiusLoadBalancingPolicy": {
                  "type": "string",
                  "enum": [
                    "Strict priority order",
                    "Round robin"
                  ],
                  "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')"
                },
                "radiusAccountingEnabled": {
                  "type": "boolean",
                  "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusAccountingServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address to which the APs will send RADIUS accounting messages",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "Port on the RADIUS server that is listening for accounting messages"
                      },
                      "secret": {
                        "type": "string",
                        "description": "Shared key used to authenticate messages between the APs and RADIUS server",
                        "required": true
                      }
                    }
                  },
                  "description": "The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'"
                },
                "radiusAttributeForGroupPolicies": {
                  "type": "string",
                  "description": "Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message"
                },
                "ipAssignmentMode": {
                  "type": "string",
                  "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')"
                },
                "useVlanTagging": {
                  "type": "boolean",
                  "description": "Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "concentratorNetworkId": {
                  "type": "string",
                  "description": "The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'."
                },
                "vlanId": {
                  "type": "integer",
                  "description": "The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'"
                },
                "defaultVlanId": {
                  "type": "integer",
                  "description": "The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "apTagsAndVlanIds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "string",
                        "description": "Comma-separated list of AP tags"
                      },
                      "vlanId": {
                        "type": "integer",
                        "description": "Numerical identifier that is assigned to the VLAN"
                      }
                    }
                  },
                  "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "walledGardenEnabled": {
                  "type": "boolean",
                  "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on."
                },
                "walledGardenRanges": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Specify your walled garden by entering an array of addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. '192.168.1.1/24', '192.168.37.10/32', 'www.yahoo.com', '*.google.com']). Meraki's splash page is automatically included in your walled garden."
                },
                "radiusOverride": {
                  "type": "boolean",
                  "description": "If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'."
                },
                "minBitrate": {
                  "type": "number",
                  "format": "float",
                  "description": "The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')"
                },
                "bandSelection": {
                  "type": "string",
                  "description": "The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')"
                },
                "perClientBandwidthLimitUp": {
                  "type": "integer",
                  "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "perClientBandwidthLimitDown": {
                  "type": "integer",
                  "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "lanIsolationEnabled": {
                  "type": "boolean",
                  "description": "Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'."
                }
              },
              "example": {
                "name": "My SSID",
                "enabled": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "number": 0,
                "name": "My SSID",
                "enabled": true,
                "splashPage": "Click-through splash page",
                "ssidAdminAccessible": false,
                "authMode": "8021x-radius",
                "encryptionMode": "wpa-eap",
                "wpaEncryptionMode": "WPA2 only",
                "radiusServers": [
                  {
                    "host": "0.0.0.0",
                    "port": 3000
                  }
                ],
                "radiusAccountingEnabled": false,
                "radiusEnabled": true,
                "radiusAttributeForGroupPolicies": "Filter-Id",
                "radiusFailoverPolicy": "null",
                "radiusLoadBalancingPolicy": "null",
                "ipAssignmentMode": "NAT mode",
                "adminSplashUrl": "http://example.com",
                "splashTimeout": "30 minutes",
                "walledGardenEnabled": true,
                "walledGardenRanges": [
                  "example.com",
                  "1.1.1.1\u001a"
                ],
                "minBitrate": 11,
                "bandSelection": "5 GHz band only",
                "perClientBandwidthLimitUp": 0,
                "perClientBandwidthLimitDown": 0
              }
            }
          }
        },
        "summary": "Update the attributes of an SSID",
        "tags": [
          "SSIDs"
        ]
      }
    },
    {
      "ruleId": "add-required-object-property",
      "message": "`paths//organizations/{organizationId}/networks/post/parameters/createOrganizationNetwork/schema` - Required property `productTypes` Added",
      "messageHtml": "<strong>Required property</strong> <span><code>productTypes</code> Added</span>",
      "objectPath": "paths//organizations/{organizationId}/networks/post/parameters/createOrganizationNetwork/schema",
      "path": "/organizations/{organizationId}/networks",
      "method": "post",
      "property": "productTypes",
      "type": "infos",
      "name": "Changes",
      "group": "Networks",
      "apiDetails": {
        "description": "Create a network",
        "operationId": "createOrganizationNetwork",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createOrganizationNetwork",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the new network",
                  "required": true
                },
                "productTypes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "wireless",
                      "appliance",
                      "switch",
                      "systemsManager",
                      "camera"
                    ]
                  },
                  "description": "The product type(s) of the new network. Valid types are wireless, appliance, switch, systemsManager, camera. If more than one type is included, the network will be a combined network.",
                  "required": true
                },
                "tags": {
                  "type": "string",
                  "description": "A space-separated list of tags to be applied to the network"
                },
                "timeZone": {
                  "type": "string",
                  "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                },
                "copyFromNetworkId": {
                  "type": "string",
                  "description": "The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly."
                },
                "disableMyMerakiCom": {
                  "type": "boolean",
                  "description": "Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)"
                },
                "disableRemoteStatusPage": {
                  "type": "boolean",
                  "description": "Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false"
                }
              },
              "example": {
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "disableMyMerakiCom": false,
                "type": "appliance switch camera"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "L_123456",
                "organizationId": "2930418",
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "productTypes": [
                  "appliance",
                  "switch",
                  "wireless"
                ],
                "disableMyMerakiCom": false,
                "enrollmentString": "long-island-office"
              }
            }
          }
        },
        "summary": "Create a network",
        "tags": [
          "Networks"
        ]
      }
    },
    {
      "ruleId": "delete-object-property",
      "message": "`paths//networks/{networkId}/put/parameters/updateNetwork/schema` - Property `enrollmentString` Deleted",
      "messageHtml": "Property <code>enrollmentString</code> Deleted",
      "path": "/networks/{networkId}",
      "method": "put",
      "objectPath": "paths//networks/{networkId}/put/parameters/updateNetwork/schema",
      "property": "enrollmentString",
      "type": "infos",
      "name": "Changes",
      "group": "Networks",
      "apiDetails": {
        "description": "Update a network",
        "operationId": "updateNetwork",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetwork",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the network"
                },
                "timeZone": {
                  "type": "string",
                  "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                },
                "tags": {
                  "type": "string",
                  "description": "A space-separated list of tags to be applied to the network"
                },
                "disableMyMerakiCom": {
                  "type": "boolean",
                  "description": "Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)"
                },
                "disableRemoteStatusPage": {
                  "type": "boolean",
                  "description": "Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false"
                }
              },
              "example": {
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "disableMyMerakiCom": false
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "L_123456",
                "organizationId": "2930418",
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "productTypes": [
                  "appliance",
                  "switch",
                  "wireless"
                ],
                "disableMyMerakiCom": false,
                "enrollmentString": "long-island-office"
              }
            }
          }
        },
        "summary": "Update a network",
        "tags": [
          "Networks"
        ]
      }
    },
    {
      "ruleId": "delete-param",
      "message": "`/organizations/{organizationId}/inventory` (get) - Param `includeLicenseInfo` deleted",
      "messageHtml": "Param <code>includeLicenseInfo</code> Deleted",
      "path": "/organizations/{organizationId}/inventory",
      "method": "get",
      "param": "includeLicenseInfo",
      "type": "infos",
      "name": "Changes",
      "group": "Organizations",
      "apiDetails": {
        "description": "Return the device inventory for an organization",
        "operationId": "getOrganizationInventory",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:11:22:33:44:55",
                  "serial": "Q234-ABCD-5678",
                  "name": "My AP",
                  "model": "MR34",
                  "networkId": "N_24329156",
                  "orderNumber": "4C1234567",
                  "claimedAt": "2018-02-11T00:00:00.090210Z",
                  "licenseExpirationDate": "2020-05-02T10:52:44.012345Z"
                }
              ]
            }
          }
        },
        "summary": "Return the device inventory for an organization",
        "tags": [
          "Organizations"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/organizations/{organizationId}/inventory` (get) - Optional param `perPage` added",
      "messageHtml": "Optional param <code>perPage</code> added",
      "path": "/organizations/{organizationId}/inventory",
      "method": "get",
      "param": "perPage",
      "type": "infos",
      "name": "Changes",
      "group": "Organizations",
      "apiDetails": {
        "description": "Return the device inventory for an organization",
        "operationId": "getOrganizationInventory",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:11:22:33:44:55",
                  "serial": "Q234-ABCD-5678",
                  "name": "My AP",
                  "model": "MR34",
                  "networkId": "N_24329156",
                  "orderNumber": "4C1234567",
                  "claimedAt": "2018-02-11T00:00:00.090210Z",
                  "licenseExpirationDate": "2020-05-02T10:52:44.012345Z"
                }
              ]
            }
          }
        },
        "summary": "Return the device inventory for an organization",
        "tags": [
          "Organizations"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/organizations/{organizationId}/inventory` (get) - Optional param `startingAfter` added",
      "messageHtml": "Optional param <code>startingAfter</code> added",
      "path": "/organizations/{organizationId}/inventory",
      "method": "get",
      "param": "startingAfter",
      "type": "infos",
      "name": "Changes",
      "group": "Organizations",
      "apiDetails": {
        "description": "Return the device inventory for an organization",
        "operationId": "getOrganizationInventory",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:11:22:33:44:55",
                  "serial": "Q234-ABCD-5678",
                  "name": "My AP",
                  "model": "MR34",
                  "networkId": "N_24329156",
                  "orderNumber": "4C1234567",
                  "claimedAt": "2018-02-11T00:00:00.090210Z",
                  "licenseExpirationDate": "2020-05-02T10:52:44.012345Z"
                }
              ]
            }
          }
        },
        "summary": "Return the device inventory for an organization",
        "tags": [
          "Organizations"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/organizations/{organizationId}/inventory` (get) - Optional param `endingBefore` added",
      "messageHtml": "Optional param <code>endingBefore</code> added",
      "path": "/organizations/{organizationId}/inventory",
      "method": "get",
      "param": "endingBefore",
      "type": "infos",
      "name": "Changes",
      "group": "Organizations",
      "apiDetails": {
        "description": "Return the device inventory for an organization",
        "operationId": "getOrganizationInventory",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:11:22:33:44:55",
                  "serial": "Q234-ABCD-5678",
                  "name": "My AP",
                  "model": "MR34",
                  "networkId": "N_24329156",
                  "orderNumber": "4C1234567",
                  "claimedAt": "2018-02-11T00:00:00.090210Z",
                  "licenseExpirationDate": "2020-05-02T10:52:44.012345Z"
                }
              ]
            }
          }
        },
        "summary": "Return the device inventory for an organization",
        "tags": [
          "Organizations"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/organizations/{organizationId}/inventory` (get) - Response `200` added to (`4C1234567`)",
      "messageHtml": "Response property <code>orderNumber</code> value added:  \n      <pre><code>       \n        {\n          orderNumber: \"4C1234567\"\n        }\n</code></pre>",
      "path": "/organizations/{organizationId}/inventory",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Organizations",
      "apiDetails": {
        "description": "Return the device inventory for an organization",
        "operationId": "getOrganizationInventory",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:11:22:33:44:55",
                  "serial": "Q234-ABCD-5678",
                  "name": "My AP",
                  "model": "MR34",
                  "networkId": "N_24329156",
                  "orderNumber": "4C1234567",
                  "claimedAt": "2018-02-11T00:00:00.090210Z",
                  "licenseExpirationDate": "2020-05-02T10:52:44.012345Z"
                }
              ]
            }
          }
        },
        "summary": "Return the device inventory for an organization",
        "tags": [
          "Organizations"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/organizations/{organizationId}/inventory` (get) - Response `200` added to (`2020-05-02T10:52:44.012345Z`)",
      "messageHtml": "Response property <code>licenseExpirationDate</code> value added:  \n      <pre><code>       \n        {\n          licenseExpirationDate: \"2020-05-02T10:52:44.012345Z\"\n        }\n</code></pre>",
      "path": "/organizations/{organizationId}/inventory",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Organizations",
      "apiDetails": {
        "description": "Return the device inventory for an organization",
        "operationId": "getOrganizationInventory",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:11:22:33:44:55",
                  "serial": "Q234-ABCD-5678",
                  "name": "My AP",
                  "model": "MR34",
                  "networkId": "N_24329156",
                  "orderNumber": "4C1234567",
                  "claimedAt": "2018-02-11T00:00:00.090210Z",
                  "licenseExpirationDate": "2020-05-02T10:52:44.012345Z"
                }
              ]
            }
          }
        },
        "summary": "Return the device inventory for an organization",
        "tags": [
          "Organizations"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/organizations/{organizationId}/inventory` (get) - Response `200` added to (`[object Object]`)",
      "messageHtml": "Response property <code>headers</code> value added:  \n      <pre><code>       \n        {\n          headers: {\"Link\":{\"type\":\"string\",\"description\":\"A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.\"}}\n        }\n</code></pre>",
      "path": "/organizations/{organizationId}/inventory",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Organizations",
      "apiDetails": {
        "description": "Return the device inventory for an organization",
        "operationId": "getOrganizationInventory",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:11:22:33:44:55",
                  "serial": "Q234-ABCD-5678",
                  "name": "My AP",
                  "model": "MR34",
                  "networkId": "N_24329156",
                  "orderNumber": "4C1234567",
                  "claimedAt": "2018-02-11T00:00:00.090210Z",
                  "licenseExpirationDate": "2020-05-02T10:52:44.012345Z"
                }
              ]
            }
          }
        },
        "summary": "Return the device inventory for an organization",
        "tags": [
          "Organizations"
        ]
      }
    },
    {
      "ruleId": "edit-summary",
      "message": "`/organizations/{organizationId}/inventory` (get) - Summary turned from `Return the inventory for an organization` to `Return the device inventory for an organization`",
      "messageHtml": "Summary changed from <code>Return the inventory for an organization</code> to <code>Return the device inventory for an organization</code>",
      "method": "get",
      "path": "/organizations/{organizationId}/inventory",
      "previousSummary": "Return the inventory for an organization",
      "currentSummary": "Return the device inventory for an organization",
      "type": "infos",
      "name": "Changes",
      "group": "Organizations",
      "apiDetails": {
        "description": "Return the device inventory for an organization",
        "operationId": "getOrganizationInventory",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:11:22:33:44:55",
                  "serial": "Q234-ABCD-5678",
                  "name": "My AP",
                  "model": "MR34",
                  "networkId": "N_24329156",
                  "orderNumber": "4C1234567",
                  "claimedAt": "2018-02-11T00:00:00.090210Z",
                  "licenseExpirationDate": "2020-05-02T10:52:44.012345Z"
                }
              ]
            }
          }
        },
        "summary": "Return the device inventory for an organization",
        "tags": [
          "Organizations"
        ]
      }
    },
    {
      "ruleId": "delete-object-property",
      "message": "`paths//organizations/{organizationId}/networks/post/parameters/createOrganizationNetwork/schema` - Property `type` Deleted",
      "messageHtml": "Property <code>type</code> Deleted",
      "path": "/organizations/{organizationId}/networks",
      "method": "post",
      "objectPath": "paths//organizations/{organizationId}/networks/post/parameters/createOrganizationNetwork/schema",
      "property": "type",
      "type": "infos",
      "name": "Changes",
      "group": "Networks",
      "apiDetails": {
        "description": "Create a network",
        "operationId": "createOrganizationNetwork",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createOrganizationNetwork",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the new network",
                  "required": true
                },
                "productTypes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "wireless",
                      "appliance",
                      "switch",
                      "systemsManager",
                      "camera"
                    ]
                  },
                  "description": "The product type(s) of the new network. Valid types are wireless, appliance, switch, systemsManager, camera. If more than one type is included, the network will be a combined network.",
                  "required": true
                },
                "tags": {
                  "type": "string",
                  "description": "A space-separated list of tags to be applied to the network"
                },
                "timeZone": {
                  "type": "string",
                  "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                },
                "copyFromNetworkId": {
                  "type": "string",
                  "description": "The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly."
                },
                "disableMyMerakiCom": {
                  "type": "boolean",
                  "description": "Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)"
                },
                "disableRemoteStatusPage": {
                  "type": "boolean",
                  "description": "Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false"
                }
              },
              "example": {
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "disableMyMerakiCom": false,
                "type": "appliance switch camera"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "L_123456",
                "organizationId": "2930418",
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "productTypes": [
                  "appliance",
                  "switch",
                  "wireless"
                ],
                "disableMyMerakiCom": false,
                "enrollmentString": "long-island-office"
              }
            }
          }
        },
        "summary": "Create a network",
        "tags": [
          "Networks"
        ]
      }
    },
    {
      "ruleId": "delete-object-property",
      "message": "`paths//organizations/{organizationId}/networks/combine/post/parameters/combineOrganizationNetworks/schema` - Property `enrollmentString` Deleted",
      "messageHtml": "Property <code>enrollmentString</code> Deleted",
      "path": "/organizations/{organizationId}/networks/combine",
      "method": "post",
      "objectPath": "paths//organizations/{organizationId}/networks/combine/post/parameters/combineOrganizationNetworks/schema",
      "property": "enrollmentString",
      "type": "infos",
      "name": "Changes",
      "group": "Networks",
      "apiDetails": {
        "description": "Combine multiple networks into a single network",
        "operationId": "combineOrganizationNetworks",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "combineOrganizationNetworks",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the combined network",
                  "required": true
                },
                "networkIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network",
                  "required": true
                }
              },
              "example": {
                "name": "Long Island Office",
                "networkIds": [
                  "N_1234",
                  "N_5678"
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "resultingNetwork": {
                  "id": "L_123456",
                  "organizationId": "2930418",
                  "name": "Long Island Office",
                  "timeZone": "America/Los_Angeles",
                  "tags": " tag1 tag2 ",
                  "productTypes": [
                    "appliance",
                    "switch",
                    "wireless"
                  ],
                  "disableMyMerakiCom": false,
                  "enrollmentString": "long-island-office"
                }
              }
            }
          }
        },
        "summary": "Combine multiple networks into a single network",
        "tags": [
          "Networks"
        ]
      }
    },
    {
      "kind": "E",
      "path": [
        "info",
        "description"
      ],
      "lhs": "The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.\n\n> Date: 02 December, 2019\n>\n> [What's New](https://meraki.io/whats-new/)\n\n---\n\n[API Documentation](https://meraki.io/api)\n\n[Community Support](https://meraki.io/community)\n\n[Meraki Homepage](https://www.meraki.com)\n",
      "rhs": "The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.\n\n> Date: 04 December, 2019\n>\n> [What's New](https://meraki.io/whats-new/)\n\n---\n\n[API Documentation](https://meraki.io/api)\n\n[Community Support](https://meraki.io/community)\n\n[Meraki Homepage](https://www.meraki.com)\n",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "securityDefinitions",
        "meraki_api_key"
      ],
      "lhs": {
        "type": "apiKey",
        "name": "X-Cisco-Meraki-API-Key",
        "in": "header"
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "securityDefinitions",
        "bearer"
      ],
      "rhs": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/devices/{serial}/camera/analytics/live",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/camera/analytics/live",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/devices/{serial}/camera/analytics/overview",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/camera/analytics/overview",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/devices/{serial}/camera/analytics/recent",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/camera/analytics/recent",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/devices/{serial}/camera/analytics/zones",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/camera/analytics/zones",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/devices/{serial}/clients",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/clients",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}",
        "get",
        "responses",
        "200",
        "examples",
        "application/json",
        "type"
      ],
      "lhs": "combined",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}",
        "put",
        "responses",
        "200",
        "examples",
        "application/json",
        "type"
      ],
      "lhs": "combined",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/accessPolicies",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/accessPolicies",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/airMarshal",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/airMarshal",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/alertSettings",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/alertSettings",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/alertSettings",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/alertSettings",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/appliancePorts",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/appliancePorts",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/appliancePorts/{appliancePortId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/appliancePorts/{appliancePortId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/appliancePorts/{appliancePortId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/appliancePorts/{appliancePortId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/bind",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/bind",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/bluetoothClients",
        "get",
        "responses",
        "200",
        "schema"
      ],
      "lhs": {
        "type": "object",
        "x-is-dynamic": true
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/bluetoothClients",
        "get",
        "responses",
        "200",
        "examples"
      ],
      "lhs": {
        "application/json": [
          {
            "id": "1284392014819",
            "mac": "22:33:44:55:66:77",
            "networkId": "N_24329156",
            "name": "Miles's phone",
            "deviceName": "Bose QuietComfort 35",
            "manufacturer": "Bose",
            "lastSeen": 1526087474,
            "seenByDeviceMac": "00:11:22:33:44:55",
            "inSightAlert": false,
            "outOfSightAlert": false,
            "tags": [
              "tag1",
              "tag2"
            ]
          }
        ]
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/bluetoothClients",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/bluetoothClients",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/bluetoothSettings",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/bluetoothSettings",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/bluetoothSettings",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/bluetoothSettings",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/cameras/{serial}/snapshot",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/cameras/{serial}/snapshot",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/cameras/{serial}/videoLink",
        "get",
        "parameters",
        "timestamp",
        "description"
      ],
      "lhs": "[optional] The video link will start at this timestamp. The timestamp is in UNIX Epoch time (milliseconds). If no timestamp is specified, we will assume current time.",
      "rhs": "[optional] The video link will start at this time. The timestamp should be a string in ISO8601 format. If no timestamp is specified, we will assume current time.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/cameras/{serial}/videoLink",
        "get",
        "parameters",
        "timestamp",
        "format"
      ],
      "rhs": "date-time",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/cameras/{serial}/videoLink",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/cameras/{serial}/videoLink",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/cellularFirewallRules",
        "get",
        "responses",
        "200",
        "examples",
        "application/json"
      ],
      "lhs": [
        {
          "comment": "Allow TCP traffic to subnet with HTTP servers.",
          "policy": "allow",
          "protocol": "tcp",
          "destPort": 443,
          "destCidr": "192.168.1.0/24",
          "srcPort": "Any",
          "srcCidr": "Any",
          "syslogEnabled": false
        }
      ],
      "rhs": {
        "rules": [
          {
            "comment": "Allow TCP traffic to subnet with HTTP servers.",
            "policy": "allow",
            "protocol": "tcp",
            "destPort": 443,
            "destCidr": "192.168.1.0/24",
            "srcPort": "Any",
            "srcCidr": "Any",
            "syslogEnabled": false
          }
        ]
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/cellularFirewallRules",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/cellularFirewallRules",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/cellularFirewallRules",
        "put",
        "responses",
        "200",
        "examples",
        "application/json"
      ],
      "lhs": [
        {
          "comment": "Allow TCP traffic to subnet with HTTP servers.",
          "policy": "allow",
          "protocol": "tcp",
          "destPort": 443,
          "destCidr": "192.168.1.0/24",
          "srcPort": "Any",
          "srcCidr": "Any",
          "syslogEnabled": false
        }
      ],
      "rhs": {
        "rules": [
          {
            "comment": "Allow TCP traffic to subnet with HTTP servers.",
            "policy": "allow",
            "protocol": "tcp",
            "destPort": 443,
            "destCidr": "192.168.1.0/24",
            "srcPort": "Any",
            "srcCidr": "Any",
            "syslogEnabled": false
          }
        ]
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/cellularFirewallRules",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/cellularFirewallRules",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/clients",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/clients/connectionStats",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/connectionStats",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/clients/latencyStats",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/latencyStats",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/clients/provision",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/provision",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/connectionStats",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/connectionStats",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/events",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/events",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/latencyHistory",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/latencyHistory",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/latencyStats",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/latencyStats",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/policy",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/policy",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/policy",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/policy",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/securityEvents",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/securityEvents",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/trafficHistory",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/trafficHistory",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/usageHistory",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/usageHistory",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/connectionStats",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/connectionStats",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/connectivityMonitoringDestinations",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/connectivityMonitoringDestinations",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/connectivityMonitoringDestinations",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/connectivityMonitoringDestinations",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/contentFiltering",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/contentFiltering",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/contentFiltering",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/contentFiltering",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/contentFiltering/categories",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/contentFiltering/categories",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/devices",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/devices/claim",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/claim",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/devices/connectionStats",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/connectionStats",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/devices/latencyStats",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/latencyStats",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/connectionStats",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/connectionStats",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/latencyStats",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/latencyStats",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/managementInterfaceSettings",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/managementInterfaceSettings",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/managementInterfaceSettings",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/managementInterfaceSettings",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/wireless/status",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/wireless/status",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/events",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/events",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/events/eventTypes",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/events/eventTypes",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/failedConnections",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/failedConnections",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/firewalledServices",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/firewalledServices",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/firewalledServices/{service}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/firewalledServices/{service}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/firewalledServices/{service}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/firewalledServices/{service}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/floorPlans",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/floorPlans",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/floorPlans",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/floorPlans",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/floorPlans/{floorPlanId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/floorPlans/{floorPlanId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/floorPlans/{floorPlanId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/floorPlans/{floorPlanId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/floorPlans/{floorPlanId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/floorPlans/{floorPlanId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/groupPolicies",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/groupPolicies",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/groupPolicies",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/groupPolicies",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/groupPolicies/{groupPolicyId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/groupPolicies/{groupPolicyId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/groupPolicies/{groupPolicyId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/groupPolicies/{groupPolicyId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/groupPolicies/{groupPolicyId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/groupPolicies/{groupPolicyId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/httpServers",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/httpServers",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/httpServers",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/httpServers",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/httpServers/webhookTests",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/httpServers/webhookTests",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/httpServers/webhookTests/{id}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/httpServers/webhookTests/{id}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/httpServers/{id}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/httpServers/{id}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/httpServers/{id}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/httpServers/{id}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/httpServers/{id}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/httpServers/{id}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/l3FirewallRules",
        "get",
        "responses",
        "200",
        "examples",
        "application/json"
      ],
      "lhs": [
        {
          "comment": "Allow TCP traffic to subnet with HTTP servers.",
          "policy": "allow",
          "protocol": "tcp",
          "destPort": 443,
          "destCidr": "192.168.1.0/24",
          "srcPort": "Any",
          "srcCidr": "Any",
          "syslogEnabled": false
        }
      ],
      "rhs": {
        "rules": [
          {
            "comment": "Allow TCP traffic to subnet with HTTP servers.",
            "policy": "allow",
            "protocol": "tcp",
            "destPort": 443,
            "destCidr": "192.168.1.0/24",
            "srcPort": "Any",
            "srcCidr": "Any",
            "syslogEnabled": false
          }
        ]
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/l3FirewallRules",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/l3FirewallRules",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/l3FirewallRules",
        "put",
        "responses",
        "200",
        "examples",
        "application/json"
      ],
      "lhs": [
        {
          "comment": "Allow TCP traffic to subnet with HTTP servers.",
          "policy": "allow",
          "protocol": "tcp",
          "destPort": 443,
          "destCidr": "192.168.1.0/24",
          "srcPort": "Any",
          "srcCidr": "Any",
          "syslogEnabled": false
        }
      ],
      "rhs": {
        "rules": [
          {
            "comment": "Allow TCP traffic to subnet with HTTP servers.",
            "policy": "allow",
            "protocol": "tcp",
            "destPort": 443,
            "destCidr": "192.168.1.0/24",
            "srcPort": "Any",
            "srcCidr": "Any",
            "syslogEnabled": false
          }
        ]
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/l3FirewallRules",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/l3FirewallRules",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/l7FirewallRules",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/l7FirewallRules",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/l7FirewallRules",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/l7FirewallRules",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/l7FirewallRules/applicationCategories",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/l7FirewallRules/applicationCategories",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/latencyStats",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/latencyStats",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/merakiAuthUsers",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/merakiAuthUsers",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/netflowSettings",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/netflowSettings",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/netflowSettings",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/netflowSettings",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/oneToManyNatRules",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/oneToManyNatRules",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/oneToManyNatRules",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/oneToManyNatRules",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/oneToOneNatRules",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/oneToOneNatRules",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/oneToOneNatRules",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/oneToOneNatRules",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/pii/piiKeys",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/pii/piiKeys",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/pii/requests",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/pii/requests",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/pii/requests",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/pii/requests",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/pii/requests/{requestId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/pii/requests/{requestId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/pii/requests/{requestId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/pii/requests/{requestId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/pii/smDevicesForKey",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/pii/smDevicesForKey",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/pii/smOwnersForKey",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/pii/smOwnersForKey",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/portForwardingRules",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/portForwardingRules",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/portForwardingRules",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/portForwardingRules",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/security/intrusionSettings",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/security/intrusionSettings",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/security/intrusionSettings",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/security/intrusionSettings",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/security/malwareSettings",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/security/malwareSettings",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/security/malwareSettings",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/security/malwareSettings",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/securityEvents",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/securityEvents",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/siteToSiteVpn",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/siteToSiteVpn",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/siteToSiteVpn",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/siteToSiteVpn",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/app/polaris",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/app/polaris",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/app/polaris",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/app/polaris",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/app/polaris/{appId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/app/polaris/{appId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/app/polaris/{appId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/app/polaris/{appId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/bypassActivationLockAttempts",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/bypassActivationLockAttempts",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/bypassActivationLockAttempts/{attemptId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/bypassActivationLockAttempts/{attemptId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/device/fields",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/device/fields",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/device/wipe",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/device/wipe",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/device/{deviceId}/refreshDetails",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/device/{deviceId}/refreshDetails",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/devices",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/devices",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/devices/checkin",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/devices/checkin",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/devices/move",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/devices/move",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/devices/tags",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/devices/tags",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/devices/{deviceId}/unenroll",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/devices/{deviceId}/unenroll",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/clarity",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/clarity",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/clarity/{profileId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/clarity/{profileId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/clarity/{profileId}",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/clarity/{profileId}",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/clarity/{profileId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/clarity/{profileId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/clarity/{profileId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/clarity/{profileId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/umbrella",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/umbrella",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/umbrella/{profileId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/umbrella/{profileId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/umbrella/{profileId}",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/umbrella/{profileId}",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/umbrella/{profileId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/umbrella/{profileId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/umbrella/{profileId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profile/umbrella/{profileId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profiles",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/profiles",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/targetGroups",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/targetGroups",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/targetGroups",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/targetGroups",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/user/{userId}/deviceProfiles",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/user/{userId}/deviceProfiles",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/user/{userId}/softwares",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/user/{userId}/softwares",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/users",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/users",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/{deviceId}/cellularUsageHistory",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/{deviceId}/cellularUsageHistory",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/{deviceId}/certs",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/{deviceId}/certs",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/{deviceId}/deviceProfiles",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/{deviceId}/deviceProfiles",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/{deviceId}/networkAdapters",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/{deviceId}/networkAdapters",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/{deviceId}/restrictions",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/{deviceId}/restrictions",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/{deviceId}/securityCenters",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/{deviceId}/securityCenters",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/{deviceId}/softwares",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/{deviceId}/softwares",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/sm/{deviceId}/wlanLists",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/sm/{deviceId}/wlanLists",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/snmpSettings",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/snmpSettings",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/snmpSettings",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/snmpSettings",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/splashLoginAttempts",
        "get",
        "responses",
        "200",
        "examples",
        "application/json",
        0,
        "loginAt"
      ],
      "lhs": 1518365681,
      "rhs": "2018-02-11T00:00:00.090210Z",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/splashLoginAttempts",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/splashLoginAttempts",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/split",
        "post",
        "responses",
        "200",
        "examples",
        "application/json",
        "resultingNetworks",
        0,
        "type"
      ],
      "lhs": "switch",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/split",
        "post",
        "responses",
        "200",
        "examples",
        "application/json",
        "resultingNetworks",
        1,
        "type"
      ],
      "lhs": "wireless",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/split",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/split",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/ssids",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/ssids",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "parameters",
        "updateNetworkSsid",
        "schema",
        "properties",
        "walledGardenRanges",
        "description"
      ],
      "lhs": "Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden.",
      "rhs": "Specify your walled garden by entering an array of addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. '192.168.1.1/24', '192.168.37.10/32', 'www.yahoo.com', '*.google.com']). Meraki's splash page is automatically included in your walled garden.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "parameters",
        "updateNetworkSsid",
        "schema",
        "properties",
        "walledGardenRanges",
        "items"
      ],
      "rhs": {
        "type": "string"
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "responses",
        "200",
        "examples",
        "application/json",
        "walledGardenRanges"
      ],
      "lhs": "example.com",
      "rhs": [
        "example.com",
        "1.1.1.1\u001a"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}/l3FirewallRules",
        "get",
        "responses",
        "200",
        "examples",
        "application/json"
      ],
      "lhs": [
        {
          "comment": "Allow TCP traffic to subnet with HTTP servers.",
          "policy": "allow",
          "protocol": "tcp",
          "destPort": 443,
          "destCidr": "192.168.1.0/24"
        }
      ],
      "rhs": {
        "rules": [
          {
            "comment": "Allow TCP traffic to subnet with HTTP servers.",
            "policy": "allow",
            "protocol": "tcp",
            "destPort": 443,
            "destCidr": "192.168.1.0/24"
          }
        ]
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}/l3FirewallRules",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}/l3FirewallRules",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}/l3FirewallRules",
        "put",
        "responses",
        "200",
        "examples",
        "application/json"
      ],
      "lhs": [
        {
          "comment": "Allow TCP traffic to subnet with HTTP servers.",
          "policy": "allow",
          "protocol": "tcp",
          "destPort": 443,
          "destCidr": "192.168.1.0/24"
        }
      ],
      "rhs": {
        "rules": [
          {
            "comment": "Allow TCP traffic to subnet with HTTP servers.",
            "policy": "allow",
            "protocol": "tcp",
            "destPort": 443,
            "destCidr": "192.168.1.0/24"
          }
        ]
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}/l3FirewallRules",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}/l3FirewallRules",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}/splashSettings",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}/splashSettings",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}/splashSettings",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}/splashSettings",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}/trafficShaping",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}/trafficShaping",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}/trafficShaping",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}/trafficShaping",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes/{srId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes/{srId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes/{srId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes/{srId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes/{srId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes/{srId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/swapWarmSpare",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/swapWarmSpare",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/accessControlLists",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/accessControlLists",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/accessControlLists",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/accessControlLists",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/portSchedules",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/portSchedules",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/portSchedules",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/portSchedules",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/dhcpServerPolicy",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/dhcpServerPolicy",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/dhcpServerPolicy",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/dhcpServerPolicy",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/dscpToCosMappings",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/dscpToCosMappings",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/dscpToCosMappings",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/dscpToCosMappings",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/mtu",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/mtu",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/mtu",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/mtu",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/qosRules",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/qosRules",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/qosRules",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/qosRules",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/qosRules/order",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/qosRules/order",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/qosRules/order",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/qosRules/order",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/stormControl",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/stormControl",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/stormControl",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/stormControl",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/stp",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/stp",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/stp",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings/stp",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switchStacks",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switchStacks",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switchStacks",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switchStacks",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switchStacks/{switchStackId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switchStacks/{switchStackId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switchStacks/{switchStackId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switchStacks/{switchStackId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switchStacks/{switchStackId}/add",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switchStacks/{switchStackId}/add",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/switchStacks/{switchStackId}/remove",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switchStacks/{switchStackId}/remove",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/syslogServers",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/syslogServers",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/syslogServers",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/syslogServers",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/traffic",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/traffic",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/trafficAnalysisSettings",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/trafficAnalysisSettings",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/trafficAnalysisSettings",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/trafficAnalysisSettings",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/trafficShaping",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/trafficShaping",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/trafficShaping",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/trafficShaping",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/trafficShaping/applicationCategories",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/trafficShaping/applicationCategories",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/unbind",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/unbind",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/uplinkSettings",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/uplinkSettings",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/uplinkSettings",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/uplinkSettings",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/vlans",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/vlans",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/vlans",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/vlans",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/vlans/{vlanId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/vlans/{vlanId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/vlans/{vlanId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/vlans/{vlanId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/vlans/{vlanId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/vlans/{vlanId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/vlansEnabledState",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/vlansEnabledState",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/vlansEnabledState",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/vlansEnabledState",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/warmSpareSettings",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/warmSpareSettings",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/warmSpareSettings",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/warmSpareSettings",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/wireless/rfProfiles",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/wireless/rfProfiles",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/wireless/rfProfiles",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/wireless/rfProfiles",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/wireless/settings",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/wireless/settings",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/wireless/settings",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/wireless/settings",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{network_id}/sm/devices/lock",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{network_id}/sm/devices/lock",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{network_id}/sm/{id}/connectivity",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{network_id}/sm/{id}/connectivity",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{network_id}/sm/{id}/desktopLogs",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{network_id}/sm/{id}/desktopLogs",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{network_id}/sm/{id}/deviceCommandLogs",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{network_id}/sm/{id}/deviceCommandLogs",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{network_id}/sm/{id}/performanceHistory",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{network_id}/sm/{id}/performanceHistory",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/actionBatches",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/actionBatches",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/actionBatches",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/actionBatches",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/actionBatches/{actionBatchId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/actionBatches/{actionBatchId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/actionBatches/{actionBatchId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/actionBatches/{actionBatchId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/actionBatches/{actionBatchId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/actionBatches/{actionBatchId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/admins",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/admins",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/admins",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/admins",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/admins/{id}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/admins/{id}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/admins/{id}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/admins/{id}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/apiRequests",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/apiRequests",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/brandingPolicies",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/brandingPolicies",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/brandingPolicies",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/brandingPolicies",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/brandingPolicies/priorities",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/brandingPolicies/priorities",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/brandingPolicies/priorities",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/brandingPolicies/priorities",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/claim",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/claim",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/clone",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/clone",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/configTemplates",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/configTemplates",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/configTemplates/{configTemplateId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/configTemplates/{configTemplateId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/configTemplates/{configTemplateId}/switchProfiles",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/configTemplates/{configTemplateId}/switchProfiles",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/deviceStatuses",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/deviceStatuses",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/devices",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/devices",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/organizations/{organizationId}/inventory",
        "get",
        "description"
      ],
      "lhs": "Return the inventory for an organization",
      "rhs": "Return the device inventory for an organization",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/organizations/{organizationId}/inventory",
        "get",
        "responses",
        "200",
        "examples",
        "application/json",
        0,
        "claimedAt"
      ],
      "lhs": 1518365681,
      "rhs": "2018-02-11T00:00:00.090210Z",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/inventory",
        "get",
        "responses",
        "200",
        "examples",
        "application/json",
        0,
        "publicIp"
      ],
      "lhs": "123.123.123.1",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/inventory",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/inventory",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/licenseState",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/licenseState",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/licenses",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/licenses",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/licenses/assignSeats",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/licenses/assignSeats",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/licenses/move",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/licenses/move",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/licenses/moveSeats",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/licenses/moveSeats",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/licenses/renewSeats",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/licenses/renewSeats",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/licenses/{licenseId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/licenses/{licenseId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/licenses/{licenseId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/licenses/{licenseId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/networks",
        "get",
        "responses",
        "200",
        "examples",
        "application/json",
        0,
        "type"
      ],
      "lhs": "combined",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/networks",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/networks",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/networks",
        "post",
        "responses",
        "201",
        "examples",
        "application/json",
        "type"
      ],
      "lhs": "combined",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/networks",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/networks",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/networks/combine",
        "post",
        "responses",
        "200",
        "examples",
        "application/json",
        "resultingNetwork",
        "type"
      ],
      "lhs": "combined",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/networks/combine",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/networks/combine",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/openapiSpec",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/openapiSpec",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/samlRoles",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/samlRoles",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/samlRoles",
        "post",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/samlRoles",
        "post",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/samlRoles/{samlRoleId}",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/samlRoles/{samlRoleId}",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/samlRoles/{samlRoleId}",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/samlRoles/{samlRoleId}",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/samlRoles/{samlRoleId}",
        "delete",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/samlRoles/{samlRoleId}",
        "delete",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/security/intrusionSettings",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/security/intrusionSettings",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/security/intrusionSettings",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/security/intrusionSettings",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/securityEvents",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/securityEvents",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/snmp",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/snmp",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/snmp",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/snmp",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/thirdPartyVPNPeers",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/thirdPartyVPNPeers",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/thirdPartyVPNPeers",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/thirdPartyVPNPeers",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/uplinksLossAndLatency",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/uplinksLossAndLatency",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/organizations/{organizationId}/vpnFirewallRules",
        "get",
        "responses",
        "200",
        "examples",
        "application/json"
      ],
      "lhs": [
        {
          "comment": "Allow TCP traffic to subnet with HTTP servers.",
          "policy": "allow",
          "protocol": "tcp",
          "destPort": 443,
          "destCidr": "192.168.1.0/24",
          "srcPort": "Any",
          "srcCidr": "Any",
          "syslogEnabled": false
        }
      ],
      "rhs": {
        "rules": [
          {
            "comment": "Allow TCP traffic to subnet with HTTP servers.",
            "policy": "allow",
            "protocol": "tcp",
            "destPort": 443,
            "destCidr": "192.168.1.0/24",
            "srcPort": "Any",
            "srcCidr": "Any",
            "syslogEnabled": false
          }
        ]
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/vpnFirewallRules",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/vpnFirewallRules",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/organizations/{organizationId}/vpnFirewallRules",
        "put",
        "responses",
        "200",
        "examples",
        "application/json"
      ],
      "lhs": [
        {
          "comment": "Allow TCP traffic to subnet with HTTP servers.",
          "policy": "allow",
          "protocol": "tcp",
          "destPort": 443,
          "destCidr": "192.168.1.0/24",
          "srcPort": "Any",
          "srcCidr": "Any",
          "syslogEnabled": false
        }
      ],
      "rhs": {
        "rules": [
          {
            "comment": "Allow TCP traffic to subnet with HTTP servers.",
            "policy": "allow",
            "protocol": "tcp",
            "destPort": 443,
            "destCidr": "192.168.1.0/24",
            "srcPort": "Any",
            "srcCidr": "Any",
            "syslogEnabled": false
          }
        ]
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/vpnFirewallRules",
        "put",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/vpnFirewallRules",
        "put",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/webhookLogs",
        "get",
        "security",
        0,
        "meraki_api_key"
      ],
      "lhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/webhookLogs",
        "get",
        "security",
        0,
        "bearer"
      ],
      "rhs": [],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        2,
        "group"
      ],
      "lhs": "Device",
      "rhs": "Dhcp server policy",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        2,
        "summary"
      ],
      "lhs": "Remove a single device",
      "rhs": "Update the DHCP server policy",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        2,
        "resource"
      ],
      "lhs": "/networks/{networkId}/devices/{serial}",
      "rhs": "/networks/{networkId}/switch/settings/dhcpServerPolicy",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        2,
        "operation"
      ],
      "lhs": "remove",
      "rhs": "update",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        3,
        "group"
      ],
      "lhs": "Device",
      "rhs": "Dscp cos mapping",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        3,
        "summary"
      ],
      "lhs": "Update the attributes of a device",
      "rhs": "Update the DSCP to CoS mappings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        3,
        "resource"
      ],
      "lhs": "/networks/{networkId}/devices/{serial}",
      "rhs": "/networks/{networkId}/switch/settings/dscpToCosMappings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        4,
        "group"
      ],
      "lhs": "Dhcp server policy",
      "rhs": "Floor plan",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        4,
        "summary"
      ],
      "lhs": "Update the DHCP server policy",
      "rhs": "Destroy a floor plan",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        4,
        "resource"
      ],
      "lhs": "/networks/{networkId}/switch/settings/dhcpServerPolicy",
      "rhs": "/networks/{networkId}/floorPlans/{floorPlanId}",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        4,
        "operation"
      ],
      "lhs": "update",
      "rhs": "destroy",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        5,
        "group"
      ],
      "lhs": "Dscp cos mapping",
      "rhs": "Floor plan",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        5,
        "summary"
      ],
      "lhs": "Update the DSCP to CoS mappings",
      "rhs": "Update a floor plan's geolocation and other meta data",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        5,
        "resource"
      ],
      "lhs": "/networks/{networkId}/switch/settings/dscpToCosMappings",
      "rhs": "/networks/{networkId}/floorPlans/{floorPlanId}",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        6,
        "group"
      ],
      "lhs": "Floor plan",
      "rhs": "Group policy",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        6,
        "summary"
      ],
      "lhs": "Destroy a floor plan",
      "rhs": "Create a group policy",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        6,
        "resource"
      ],
      "lhs": "/networks/{networkId}/floorPlans/{floorPlanId}",
      "rhs": "/networks/{networkId}/groupPolicies",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        6,
        "operation"
      ],
      "lhs": "destroy",
      "rhs": "create",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        7,
        "group"
      ],
      "lhs": "Floor plan",
      "rhs": "Group policy",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        7,
        "summary"
      ],
      "lhs": "Update a floor plan's geolocation and other meta data",
      "rhs": "Delete a group policy",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        7,
        "resource"
      ],
      "lhs": "/networks/{networkId}/floorPlans/{floorPlanId}",
      "rhs": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        7,
        "operation"
      ],
      "lhs": "update",
      "rhs": "destroy",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        8,
        "summary"
      ],
      "lhs": "Create a group policy",
      "rhs": "Update a group policy",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        8,
        "resource"
      ],
      "lhs": "/networks/{networkId}/groupPolicies",
      "rhs": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        8,
        "operation"
      ],
      "lhs": "create",
      "rhs": "update",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        9,
        "group"
      ],
      "lhs": "Group policy",
      "rhs": "License",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        9,
        "summary"
      ],
      "lhs": "Delete a group policy",
      "rhs": "Assign SM seats to a network. This will increase the managed SM device limit of the network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        9,
        "resource"
      ],
      "lhs": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "rhs": "/organizations/{organizationId}/licenses",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        9,
        "operation"
      ],
      "lhs": "destroy",
      "rhs": "assignSeats",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        10,
        "group"
      ],
      "lhs": "Group policy",
      "rhs": "License",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        10,
        "summary"
      ],
      "lhs": "Update a group policy",
      "rhs": "Move licenses to another organization. This will also move any devices that the licenses are assigned to",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        10,
        "resource"
      ],
      "lhs": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "rhs": "/organizations/{organizationId}/licenses",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        10,
        "operation"
      ],
      "lhs": "update",
      "rhs": "move",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        11,
        "summary"
      ],
      "lhs": "Assign SM seats to a network. This will increase the managed SM device limit of the network",
      "rhs": "Move SM seats to another organization",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        11,
        "operation"
      ],
      "lhs": "assignSeats",
      "rhs": "moveSeats",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        12,
        "summary"
      ],
      "lhs": "Move licenses to another organization. This will also move any devices that the licenses are assigned to",
      "rhs": "Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        12,
        "operation"
      ],
      "lhs": "move",
      "rhs": "renewSeats",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        13,
        "summary"
      ],
      "lhs": "Move SM seats to another organization",
      "rhs": "Update a license",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        13,
        "resource"
      ],
      "lhs": "/organizations/{organizationId}/licenses",
      "rhs": "/organizations/{organizationId}/licenses/{licenseId}",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        13,
        "operation"
      ],
      "lhs": "moveSeats",
      "rhs": "update",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        14,
        "group"
      ],
      "lhs": "License",
      "rhs": "MTU configuration",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        14,
        "summary"
      ],
      "lhs": "Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license",
      "rhs": "Update the MTU configuration",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        14,
        "resource"
      ],
      "lhs": "/organizations/{organizationId}/licenses",
      "rhs": "/networks/{networkId}/switch/settings/mtu",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        14,
        "operation"
      ],
      "lhs": "renewSeats",
      "rhs": "update",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        15,
        "group"
      ],
      "lhs": "License",
      "rhs": "MX l7 firewall",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        15,
        "summary"
      ],
      "lhs": "Update a license",
      "rhs": "Update the MX L7 firewall rules for an MX network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        15,
        "resource"
      ],
      "lhs": "/organizations/{organizationId}/licenses/{licenseId}",
      "rhs": "/networks/{networkId}/l7FirewallRules",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        16,
        "group"
      ],
      "lhs": "MTU configuration",
      "rhs": "MX port",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        16,
        "summary"
      ],
      "lhs": "Update the MTU configuration",
      "rhs": "Update the per-port VLAN settings for a single MX port.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        16,
        "resource"
      ],
      "lhs": "/networks/{networkId}/switch/settings/mtu",
      "rhs": "/networks/{networkId}/appliancePorts/{appliancePortId}",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        17,
        "group"
      ],
      "lhs": "MX l7 firewall",
      "rhs": "Management interface settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        17,
        "summary"
      ],
      "lhs": "Update the MX L7 firewall rules for an MX network",
      "rhs": "Update the management interface settings for a device",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        17,
        "resource"
      ],
      "lhs": "/networks/{networkId}/l7FirewallRules",
      "rhs": "/networks/{networkId}/devices/{serial}/managementInterfaceSettings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        18,
        "group"
      ],
      "lhs": "MX port",
      "rhs": "Network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        18,
        "summary"
      ],
      "lhs": "Update the per-port VLAN settings for a single MX port.",
      "rhs": "Delete a network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        18,
        "resource"
      ],
      "lhs": "/networks/{networkId}/appliancePorts/{appliancePortId}",
      "rhs": "/networks/{networkId}",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        18,
        "operation"
      ],
      "lhs": "update",
      "rhs": "destroy",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        19,
        "group"
      ],
      "lhs": "Management interface settings",
      "rhs": "Network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        19,
        "summary"
      ],
      "lhs": "Update the management interface settings for a device",
      "rhs": "Create a network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        19,
        "resource"
      ],
      "lhs": "/networks/{networkId}/devices/{serial}/managementInterfaceSettings",
      "rhs": "/organizations/{organizationId}/networks",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        19,
        "operation"
      ],
      "lhs": "update",
      "rhs": "create",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        20,
        "group"
      ],
      "lhs": "Network",
      "rhs": "Qos rule",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        20,
        "summary"
      ],
      "lhs": "Delete a network",
      "rhs": "Add a quality of service rule",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        20,
        "resource"
      ],
      "lhs": "/networks/{networkId}",
      "rhs": "/networks/{networkId}/switch/settings/qosRules",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        20,
        "operation"
      ],
      "lhs": "destroy",
      "rhs": "create",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        21,
        "group"
      ],
      "lhs": "Network",
      "rhs": "Qos rule",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        21,
        "summary"
      ],
      "lhs": "Split a combined network into individual networks for each type of device",
      "rhs": "Update the order in which the rules should be processed by the switch",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        21,
        "resource"
      ],
      "lhs": "/networks/{networkId}",
      "rhs": "/networks/{networkId}/switch/settings/qosRules/order",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        21,
        "operation"
      ],
      "lhs": "split",
      "rhs": "update_order",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        22,
        "group"
      ],
      "lhs": "Network",
      "rhs": "Qos rule",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        22,
        "summary"
      ],
      "lhs": "Update a network",
      "rhs": "Delete a quality of service rule",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        22,
        "resource"
      ],
      "lhs": "/networks/{networkId}",
      "rhs": "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        22,
        "operation"
      ],
      "lhs": "update",
      "rhs": "destroy",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        23,
        "group"
      ],
      "lhs": "Network",
      "rhs": "Qos rule",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        23,
        "summary"
      ],
      "lhs": "Combine multiple networks into a single network",
      "rhs": "Update a quality of service rule",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        23,
        "resource"
      ],
      "lhs": "/organizations/{organizationId}/networks",
      "rhs": "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        23,
        "operation"
      ],
      "lhs": "combine",
      "rhs": "update",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        24,
        "group"
      ],
      "lhs": "Network",
      "rhs": "RF profile",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        24,
        "summary"
      ],
      "lhs": "Create a network",
      "rhs": "Creates new RF profile for this network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        24,
        "resource"
      ],
      "lhs": "/organizations/{organizationId}/networks",
      "rhs": "/networks/{networkId}/wireless/rfProfiles",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        25,
        "group"
      ],
      "lhs": "Qos rule",
      "rhs": "RF profile",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        25,
        "summary"
      ],
      "lhs": "Add a quality of service rule",
      "rhs": "Delete a RF Profile",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        25,
        "resource"
      ],
      "lhs": "/networks/{networkId}/switch/settings/qosRules",
      "rhs": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        25,
        "operation"
      ],
      "lhs": "create",
      "rhs": "destroy",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        26,
        "group"
      ],
      "lhs": "Qos rule",
      "rhs": "RF profile",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        26,
        "summary"
      ],
      "lhs": "Update the order in which the rules should be processed by the switch",
      "rhs": "Updates specified RF profile for this network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        26,
        "resource"
      ],
      "lhs": "/networks/{networkId}/switch/settings/qosRules/order",
      "rhs": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        26,
        "operation"
      ],
      "lhs": "update_order",
      "rhs": "update",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        27,
        "group"
      ],
      "lhs": "Qos rule",
      "rhs": "Radio settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        27,
        "summary"
      ],
      "lhs": "Delete a quality of service rule",
      "rhs": "Update the radio settings of a device",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        27,
        "resource"
      ],
      "lhs": "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
      "rhs": "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        27,
        "operation"
      ],
      "lhs": "destroy",
      "rhs": "update",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        28,
        "group"
      ],
      "lhs": "Qos rule",
      "rhs": "STP configuration",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        28,
        "summary"
      ],
      "lhs": "Update a quality of service rule",
      "rhs": "Updates STP settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        28,
        "resource"
      ],
      "lhs": "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
      "rhs": "/networks/{networkId}/switch/settings/stp",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        29,
        "group"
      ],
      "lhs": "RF profile",
      "rhs": "Storm control",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        29,
        "summary"
      ],
      "lhs": "Creates new RF profile for this network",
      "rhs": "Update the global enhanced storm control configuration",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        29,
        "resource"
      ],
      "lhs": "/networks/{networkId}/wireless/rfProfiles",
      "rhs": "/networks/{networkId}/switch/settings/stormControl",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        29,
        "operation"
      ],
      "lhs": "create",
      "rhs": "update",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        30,
        "group"
      ],
      "lhs": "RF profile",
      "rhs": "Switch port",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        30,
        "summary"
      ],
      "lhs": "Delete a RF Profile",
      "rhs": "Update a switch port",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        30,
        "resource"
      ],
      "lhs": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
      "rhs": "/devices/{serial}/switchPorts/{number}",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        30,
        "operation"
      ],
      "lhs": "destroy",
      "rhs": "update",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        31,
        "group"
      ],
      "lhs": "RF profile",
      "rhs": "Switch port schedule",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        31,
        "summary"
      ],
      "lhs": "Updates specified RF profile for this network",
      "rhs": "Update a switch port schedule",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        31,
        "resource"
      ],
      "lhs": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
      "rhs": "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        32,
        "group"
      ],
      "lhs": "Radio settings",
      "rhs": "Traffic shaping settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        32,
        "summary"
      ],
      "lhs": "Update the radio settings of a device",
      "rhs": "Update the traffic shaping settings for an SSID on an MR network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        32,
        "resource"
      ],
      "lhs": "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "rhs": "/networks/{networkId}/ssids/{number}/trafficShaping",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        33,
        "group"
      ],
      "lhs": "STP configuration",
      "rhs": "Traffic shaping settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        33,
        "summary"
      ],
      "lhs": "Updates STP settings",
      "rhs": "Update the traffic shaping settings for an MX network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        33,
        "resource"
      ],
      "lhs": "/networks/{networkId}/switch/settings/stp",
      "rhs": "/networks/{networkId}/trafficShaping",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        34,
        "group"
      ],
      "lhs": "Storm control",
      "rhs": "VLAN",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        34,
        "summary"
      ],
      "lhs": "Update the global enhanced storm control configuration",
      "rhs": "Add a VLAN",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        34,
        "resource"
      ],
      "lhs": "/networks/{networkId}/switch/settings/stormControl",
      "rhs": "/networks/{networkId}/vlans",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        34,
        "operation"
      ],
      "lhs": "update",
      "rhs": "create",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        35,
        "group"
      ],
      "lhs": "Switch port",
      "rhs": "VLAN",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        35,
        "summary"
      ],
      "lhs": "Update a switch port",
      "rhs": "Delete a VLAN from a network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        35,
        "resource"
      ],
      "lhs": "/devices/{serial}/switchPorts/{number}",
      "rhs": "/networks/{networkId}/vlans/{vlanId}",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        35,
        "operation"
      ],
      "lhs": "update",
      "rhs": "destroy",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        36,
        "group"
      ],
      "lhs": "Switch port schedule",
      "rhs": "VLAN",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        36,
        "summary"
      ],
      "lhs": "Update a switch port schedule",
      "rhs": "Update a VLAN",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        36,
        "resource"
      ],
      "lhs": "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
      "rhs": "/networks/{networkId}/vlans/{vlanId}",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        37,
        "group"
      ],
      "lhs": "Traffic shaping settings",
      "rhs": "Warm spare",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        37,
        "summary"
      ],
      "lhs": "Update the traffic shaping settings for an SSID on an MR network",
      "rhs": "Swap MX primary and warm spare appliances",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        37,
        "resource"
      ],
      "lhs": "/networks/{networkId}/ssids/{number}/trafficShaping",
      "rhs": "/networks/{networkId}/swapWarmSpare",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        37,
        "operation"
      ],
      "lhs": "update",
      "rhs": "swap",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        38,
        "group"
      ],
      "lhs": "Traffic shaping settings",
      "rhs": "Warm spare",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        38,
        "summary"
      ],
      "lhs": "Update the traffic shaping settings for an MX network",
      "rhs": "Update MX warm spare settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        38,
        "resource"
      ],
      "lhs": "/networks/{networkId}/trafficShaping",
      "rhs": "/networks/{networkId}/warmSpareSettings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        39,
        "group"
      ],
      "lhs": "VLAN",
      "rhs": "Wireless settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        39,
        "summary"
      ],
      "lhs": "Add a VLAN",
      "rhs": "Update the wireless settings for a network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        39,
        "resource"
      ],
      "lhs": "/networks/{networkId}/vlans",
      "rhs": "/networks/{networkId}/wireless/settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "x-batchable-actions",
        39,
        "operation"
      ],
      "lhs": "create",
      "rhs": "update",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "A",
      "path": [
        "x-batchable-actions"
      ],
      "index": 40,
      "item": {
        "kind": "D",
        "lhs": {
          "group": "VLAN",
          "summary": "Delete a VLAN from a network",
          "resource": "/networks/{networkId}/vlans/{vlanId}",
          "operation": "destroy"
        }
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "A",
      "path": [
        "x-batchable-actions"
      ],
      "index": 41,
      "item": {
        "kind": "D",
        "lhs": {
          "group": "VLAN",
          "summary": "Update a VLAN",
          "resource": "/networks/{networkId}/vlans/{vlanId}",
          "operation": "update"
        }
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "A",
      "path": [
        "x-batchable-actions"
      ],
      "index": 42,
      "item": {
        "kind": "D",
        "lhs": {
          "group": "Warm spare",
          "summary": "Swap MX primary and warm spare appliances",
          "resource": "/networks/{networkId}/swapWarmSpare",
          "operation": "swap"
        }
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "A",
      "path": [
        "x-batchable-actions"
      ],
      "index": 43,
      "item": {
        "kind": "D",
        "lhs": {
          "group": "Warm spare",
          "summary": "Update MX warm spare settings",
          "resource": "/networks/{networkId}/warmSpareSettings",
          "operation": "update"
        }
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "A",
      "path": [
        "x-batchable-actions"
      ],
      "index": 44,
      "item": {
        "kind": "D",
        "lhs": {
          "group": "Wireless settings",
          "summary": "Update the wireless settings for a network",
          "resource": "/networks/{networkId}/wireless/settings",
          "operation": "update"
        }
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "ruleId": "rename-path",
      "message": "Path `/networks/{networkId}/devices/{serial}` renamed to `/devices/{serial}`",
      "messageHtml": "Path <code>/networks/{networkId}/devices/{serial}</code> renamed to <code>/devices/{serial}</code>",
      "path": "/networks/{networkId}/devices/{serial}",
      "newPath": "/devices/{serial}",
      "type": "renamed",
      "name": "Renamed"
    },
    {
      "ruleId": "rename-path",
      "message": "Path `/networks/{networkId}/devices/{serial}/blinkLeds` renamed to `/devices/{serial}/blinkLeds`",
      "messageHtml": "Path <code>/networks/{networkId}/devices/{serial}/blinkLeds</code> renamed to <code>/devices/{serial}/blinkLeds</code>",
      "path": "/networks/{networkId}/devices/{serial}/blinkLeds",
      "newPath": "/devices/{serial}/blinkLeds",
      "type": "renamed",
      "name": "Renamed"
    },
    {
      "ruleId": "rename-path",
      "message": "Path `/networks/{networkId}/devices/{serial}/lldp_cdp` renamed to `/devices/{serial}/lldpCdp`",
      "messageHtml": "Path <code>/networks/{networkId}/devices/{serial}/lldp_cdp</code> renamed to <code>/devices/{serial}/lldpCdp</code>",
      "path": "/networks/{networkId}/devices/{serial}/lldp_cdp",
      "newPath": "/devices/{serial}/lldpCdp",
      "type": "renamed",
      "name": "Renamed"
    },
    {
      "ruleId": "rename-path",
      "message": "Path `/networks/{networkId}/devices/{serial}/lossAndLatencyHistory` renamed to `/devices/{serial}/lossAndLatencyHistory`",
      "messageHtml": "Path <code>/networks/{networkId}/devices/{serial}/lossAndLatencyHistory</code> renamed to <code>/devices/{serial}/lossAndLatencyHistory</code>",
      "path": "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
      "newPath": "/devices/{serial}/lossAndLatencyHistory",
      "type": "renamed",
      "name": "Renamed"
    },
    {
      "ruleId": "rename-path",
      "message": "Path `/networks/{networkId}/devices/{serial}/performance` renamed to `/devices/{serial}/performance`",
      "messageHtml": "Path <code>/networks/{networkId}/devices/{serial}/performance</code> renamed to <code>/devices/{serial}/performance</code>",
      "path": "/networks/{networkId}/devices/{serial}/performance",
      "newPath": "/devices/{serial}/performance",
      "type": "renamed",
      "name": "Renamed"
    },
    {
      "ruleId": "rename-path",
      "message": "Path `/networks/{networkId}/devices/{serial}/reboot` renamed to `/devices/{serial}/reboot`",
      "messageHtml": "Path <code>/networks/{networkId}/devices/{serial}/reboot</code> renamed to <code>/devices/{serial}/reboot</code>",
      "path": "/networks/{networkId}/devices/{serial}/reboot",
      "newPath": "/devices/{serial}/reboot",
      "type": "renamed",
      "name": "Renamed"
    },
    {
      "ruleId": "rename-path",
      "message": "Path `/networks/{networkId}/devices/{serial}/remove` renamed to `/networks/{networkId}/devices/remove`",
      "messageHtml": "Path <code>/networks/{networkId}/devices/{serial}/remove</code> renamed to <code>/networks/{networkId}/devices/remove</code>",
      "path": "/networks/{networkId}/devices/{serial}/remove",
      "newPath": "/networks/{networkId}/devices/remove",
      "type": "renamed",
      "name": "Renamed"
    },
    {
      "ruleId": "rename-path",
      "message": "Path `/networks/{networkId}/devices/{serial}/uplink` renamed to `/devices/{serial}/uplink`",
      "messageHtml": "Path <code>/networks/{networkId}/devices/{serial}/uplink</code> renamed to <code>/devices/{serial}/uplink</code>",
      "path": "/networks/{networkId}/devices/{serial}/uplink",
      "newPath": "/devices/{serial}/uplink",
      "type": "renamed",
      "name": "Renamed"
    }
  ]
}